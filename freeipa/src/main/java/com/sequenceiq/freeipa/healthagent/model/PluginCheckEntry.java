/*
 * FreeIPA Healthcheck API
 * API of the FreeIPA healtcheck service
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sequenceiq.freeipa.healthagent.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * PluginCheckEntry
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-07T16:30:36.099586-05:00[America/Chicago]")
public class PluginCheckEntry {
  @SerializedName("host")
  private String host = null;

  /**
   * The status of the plugin check.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    HEALTHY("HEALTHY"),
    UNHEALTHY("UNHEALTHY"),
    DEGRADED("DEGRADED"),
    ERROR("ERROR");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("plugin")
  private String plugin = null;

  @SerializedName("reponse_time")
  private Float reponseTime = null;

  @SerializedName("detail")
  private Map<String, String> detail = new HashMap<String, String>();

  public PluginCheckEntry host(String host) {
    this.host = host;
    return this;
  }

   /**
   * The host the plugin ran on.
   * @return host
  **/
  @Schema(required = true, description = "The host the plugin ran on.")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public PluginCheckEntry status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the plugin check.
   * @return status
  **/
  @Schema(required = true, description = "The status of the plugin check.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PluginCheckEntry plugin(String plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * The name of the plugin.
   * @return plugin
  **/
  @Schema(required = true, description = "The name of the plugin.")
  public String getPlugin() {
    return plugin;
  }

  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }

  public PluginCheckEntry reponseTime(Float reponseTime) {
    this.reponseTime = reponseTime;
    return this;
  }

   /**
   * The response time in seconds for the plugin.
   * @return reponseTime
  **/
  @Schema(required = true, description = "The response time in seconds for the plugin.")
  public Float getReponseTime() {
    return reponseTime;
  }

  public void setReponseTime(Float reponseTime) {
    this.reponseTime = reponseTime;
  }

  public PluginCheckEntry detail(Map<String, String> detail) {
    this.detail = detail;
    return this;
  }

  public PluginCheckEntry putDetailItem(String key, String detailItem) {
    this.detail.put(key, detailItem);
    return this;
  }

   /**
   * Setable details of the check.  Typically containing error details.
   * @return detail
  **/
  @Schema(required = true, description = "Setable details of the check.  Typically containing error details.")
  public Map<String, String> getDetail() {
    return detail;
  }

  public void setDetail(Map<String, String> detail) {
    this.detail = detail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginCheckEntry pluginCheckEntry = (PluginCheckEntry) o;
    return Objects.equals(this.host, pluginCheckEntry.host) &&
        Objects.equals(this.status, pluginCheckEntry.status) &&
        Objects.equals(this.plugin, pluginCheckEntry.plugin) &&
        Objects.equals(this.reponseTime, pluginCheckEntry.reponseTime) &&
        Objects.equals(this.detail, pluginCheckEntry.detail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(host, status, plugin, reponseTime, detail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginCheckEntry {\n");
    
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    reponseTime: ").append(toIndentedString(reponseTime)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
