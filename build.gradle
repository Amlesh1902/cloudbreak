import java.io.File;

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.7
group = 'com.sequenceiq'
version = '0.1'

jar { 
    baseName = 'provisioning-api' 
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.0.2.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.0.2.RELEASE")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.0.2.RELEASE")
}

task wrapper(type: Wrapper) { gradleVersion = "1.12" }

task buildInfo(type: BuildInfoTask) {
    destination = file("$buildDir")
    basename = jar.baseName
    buildVersion =  version
}

compileJava.dependsOn buildInfo

class BuildInfoTask extends DefaultTask {
    File destination = new File("build.info")
    String basename
    String buildVersion

    @TaskAction
    def writeBuildInfo() {
        destination.mkdirs()
        new File(destination, "build.info").withWriter { out ->
            [
                "ARTIFACT_BASENAME=" + basename,
                "ARTIFACT_VERSION=" + buildVersion,
            ].each { out.println it } }
    }
}
