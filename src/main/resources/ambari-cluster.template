{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation template to create an Ambari cluster on EC2",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "SSHLocation" : {
      "Description" : "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "WebServerInstanceType" : {
      "Description" : "WebServer Server EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : ["t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "cc2.8xlarge", "cg1.4xlarge", "hi1.4xlarge", "hs1.8xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "WebServerCount" : {
      "Description" : "Number of EC2 instances to launch for the WebServer server",
      "Type" : "Number",
      "Default" : "1"
    }
  },

  "Mappings" : {

    "AWSInstanceType2Arch": {
      "t1.micro"   : { "Arch": "PV64" },
      "m1.small"   : { "Arch": "PV64" },
      "m1.medium"  : { "Arch": "PV64" },
      "m1.large"   : { "Arch": "PV64" },
      "m1.xlarge"  : { "Arch": "PV64" },
      "m3.xlarge"  : { "Arch": "PV64" },
      "m3.2xlarge" : { "Arch": "PV64" },
      "m2.xlarge"  : { "Arch": "PV64" },
      "m2.2xlarge" : { "Arch": "PV64" },
      "m2.4xlarge" : { "Arch": "PV64" },
      "c1.medium"  : { "Arch": "PV64" },
      "c1.xlarge"  : { "Arch": "PV64" },
      "cc1.4xlarge": { "Arch": "CLU64" },
      "cc2.8xlarge": { "Arch": "CLU64" },
      "cg1.4xlarge": { "Arch": "GPU64" },
      "hi1.4xlarge": { "Arch": "PV64" },
      "hs1.8xlarge": { "Arch": "PV64" }
    },

    "AWSRegionArch2AMI": {

      "us-east-1"     : { "PV64": "ami-05355a6c", "CLU64": "ami-a73758ce", "GPU64": "ami-cf3758a6" },
      "us-west-2"     : { "PV64": "ami-0358ce33", "CLU64": "ami-d75bcde7", "GPU64": "NOT_YET_SUPPORTED" },
      "us-west-1"     : { "PV64": "ami-3ffed17a", "CLU64": "ami-47fed102", "GPU64": "NOT_YET_SUPPORTED" },
      "eu-west-1"     : { "PV64": "ami-c7c0d6b3", "CLU64": "ami-d1c0d6a5", "GPU64": "ami-45c0d631" },
      "ap-southeast-1": { "PV64": "ami-fade91a8", "CLU64": "ami-18de914a", "GPU64": "NOT_YET_SUPPORTED" },
      "ap-southeast-2": { "PV64": "ami-d16bfbeb", "CLU64": "ami-876bfbbd", "GPU64": "NOT_YET_SUPPORTED" },
      "ap-northeast-1": { "PV64": "ami-39b23d38", "CLU64": "ami-2db33c2c", "GPU64": "NOT_YET_SUPPORTED" },
      "sa-east-1"     : { "PV64": "ami-5253894f", "CLU64": "ami-38538925", "GPU64": "NOT_YET_SUPPORTED" },
      "us-gov-west-1" : { "PV64": "ami-a58feb86", "CLU64": "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" }
    },

    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.0.0.0/16" },
      "Public"  : { "CIDR" : "10.0.0.0/24" }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

	
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    
    "AmbariServerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PublicRoute",
      "Properties" : {
      	"AvailabilityZone" : { "Fn::GetAtt" : [ "PublicSubnet", "AvailabilityZone" ] },
        "ImageId"        : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "WebServerInstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "WebServerInstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "WebServerSecurityGroup" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnet" }
        }],
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "echo 'hello'\n"
        ]]}}
      }
    },
    
    "WebServerFleet" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : "AmbariServerInstance",
      "Properties" : {
        "AvailabilityZones" : [{ "Fn::GetAtt" : [ "PublicSubnet", "AvailabilityZone" ] }],
        "VPCZoneIdentifier" : [{ "Ref" : "PublicSubnet" }],
        "LaunchConfigurationName" : { "Ref" : "WebServerServerLaunchConfig"  },
        "MinSize" : "1",
        "MaxSize" : "10",
        "DesiredCapacity" : { "Ref" : "WebServerCount" },
        "Tags" : [ { "Key" : "Network", "Value" : "Public", "PropagateAtLaunch" : "true" } ]
      }
    },

    "WebServerServerLaunchConfig"  : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId"        : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "WebServerInstanceType" }, "Arch" ] } ] },
        "SecurityGroups" : [ { "Ref" : "WebServerSecurityGroup" } ],
        "InstanceType"   : { "Ref" : "WebServerInstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "AssociatePublicIpAddress" : "true",
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "echo 'IP address of Ambari server:'\n",
          "echo ",
          { "Fn::GetAtt" : [ "AmbariServerInstance" , "PrivateIp"] },
          "echo ",
          { "Fn::GetAtt" : [ "AmbariServerInstance" , "PublicIp"] }
        ]]}}
      }
    },

    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow access from web and bastion as well as outbound HTTP and HTTPS traffic",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
		  { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"} ,
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation" } } ]
      }
    },

    "WebServerWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WebServerWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServerFleet",
      "Properties" : {
        "Handle"  : { "Ref" : "WebServerWaitHandle" },
        "Timeout" : "3600",
        "Count"   : { "Ref" : "WebServerCount" }
      }
    }
  }

}