FORMAT: 1A
HOST: http://apidocs.sequenceiq.com/cloudbreak

# cloudbreak
*Cloudbreak is a powerful left surf that breaks over a coral reef, a mile off southwest the island of Tavarua, Fiji.*

*Cloudbreak is a cloud agnostic Hadoop as a Service API. Abstracts the provisioning and ease management and monitoring of on-demand clusters.*

Cloudbreak is a RESTful application development platform with the goal of helping developers to build solutions for deploying Hadoop YARN clusters in different environments. Once it is deployed in your favorite servlet container it exposes a REST API allowing to span up Hadoop clusters of arbitary sizes and cloud providers. Provisioning Hadoop has never been easier.
Cloudbreak is built on the foundation of cloud providers API (Amazon AWS, Microsoft Azure), Apache Ambari, Docker lightweight containers, Serf and dnsmasq. 


##Benefits

###Secure
It supports a token based and OAuth2 authentication model. The cluster is provisioned in a logically isolated network (Virtual Private Cloud) of your cloud favorite cloud provider.
If the cluster is launched in a VPC network, the framework gonfigure firewall settings that control the network access of your launched instances. For example a Hadoop Resource Manager can be accessed from the internet, whereas non of the other nodes are available.
Cloudbreak does not store or manages your cloud credentials - it is the end user's responsability to link Cloudbreak with her/his cloud account. We provide utilities to ease this process (IAM on Amazon, certificates on Azure).

###Elastic
Using Cloudbreak API you can provision an arbitrary number of Hadoop nodes - the API does the hard work for you, and span up the cluster, configure the networks and the selected Hadoop services without any interaction. 
POST once and use it anytime after.

###Scalable
As your workload changes, the API allows you to add or remove nodes on the fly. Cloudbreak does the hard work of reconfiguring the infrastructure, provision or decomission Hadoop nodes and let the cluster be continuosely operational. 
Once provisioned, new nodes will take up the load and increase the cluster throughput.

###Blueprints
Supports different Hadoop cluster blueprints. Hostgroups defined in blueprints can be associated to different VPC subnets and availability zones, thus you can span up a cluster for deploying highly available applications.

###Flexible
You have the option to choose your favorite cloud provider and different pricing models. The API translated the calls towards different cloud vendors - you develop and use one common API, no need to rewrite you code when changing between cloud providers.


# Group User authentication
Authentication related resources of the **Cloudbreak API**.

The API supports token based and OAuth2 authentication. 
All operations against a REST resource must be authenticated.

## Authentication [/authenticate]
### Authenticates a user [POST]
After successful authentication the call will return with an authentication token, and the user role. The token invalidates with the HTTP session or with the expiration of OAuth2 token. 

+ Request (application/json)

        {
            "username": "mick.fanning@surf.com",
            "password": "magicseaweed"
        }

+ Response 200 (application/json)

        {
            "token": "user:c45sdfdsfo234jgkhsdgf324",
            "roles": {
                "ROLE_COMPANY_ADMIN": true,
                "ROLE_COMPANY_USER ": true
            },
            "name": "mick.fanning@surf.com"
        }

# Group User management
User management related resources of the **Cloudbreak API**.

These calls require *COMPANY_ADMIN* roles. A company administrator is the user who registers the company.
Currently there are two user roles supported: regular users as  *COMPANY_USER* and admin users as *COMPANY_ADMIN*.

## User management [/users]
### Creates a new user [POST]
Creates a new user with the specified username/password and role.

+ Request (application/json)

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "username": "kelly.slater@surf.com",
                "password": "magicseaweed",
                "userRole": {COMPANY_ADMIN, COMPANY_USER}
            }

+ Response 200 (application/json)

        {
            "id": "user-2"
        }

### List all users [GET]
Users in *COMPANY_ADMIN* role can retrieve all users belonging to the company. 
The information contains generic user info, cloud and Hadoop cluster configurations belonging to the particular user.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324


+ Response 200 (application/json)

        [
            {
               TBD
            }
        ]

## User informations [/me]
Retrieve informations about the authenticated 

### Retrieve a user config [GET]
The information contains generic user info, cloud and Hadoop cluster configurations belonging to the particular user.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            {
               TBD
            }
        }



# Group Cloud authentication
Cloud Authentication related resources of the **Cloudbreak API**.
Adds an AWS IAM role ARN or Azure JKS to user's account.


## Associate a cloud credential to user [/credential]
### Associate credential [POST]
Adds an AWS IAM role ARN or the user's account.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
        
    + Body

            {
                "type": "AWS",
                "params": {
                    "roleArn":"arn:aws:iam::sequenceiq-acc-id:role/provisioning-api-role"
                 }
            }

    + Response 200 (application/json)
    
            {
                TBD
            }

## Associate a cloud credential to user [/credential]
### Associate credential [POST]
Adds a Azure JKS the user's account.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
    + Body

            {
                "type": "AZURE",
                      "params": {
                          "subscriptionId":"80b6d3f7-be83-4c1f-b1623-c56c4317ed9a",
                          "jksName":"my-jks",
                          "jksPassword":"password123"
                        }
            }

    + Response 200 (application/json)
    
            {
                TBD
            }
            
            
##Retrieves the cloud credentials of a user [/credential]
### Retrieve credentials [GET]
Retrieve all the associated cloud credentials of a user

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            {
            "id":"credential-123",
            "type": "AWS",
            "params":{
              "roleArn":"arn:aws:iam::sequenceiq-acc-id:role/sequenceiq-provision"
            }
          },
          {
            "id":"credential-234",
            "type": "AZURE",
            "params": {
              "subscriptionId":"80b6d3f7-be83-4c1f-b1623-c56c4317ed9a",
              "jksName":"my-jks",
              "jksPassword":"password123"
            }
          }
        }
        
##Retrieves the cloud credential configuration of a user [/credential/{id}]
### Retrieve the user's JKS file [GET]
Retrieves the Azure cloud JKS file associated with the user account
+ Parameters
    + id (required String `azure-credential-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
        }


##Deletes the associated cloud credential from the user accountcredential [/credential/{id}]
### Deletes the associated credential[DELETE]
Retrieves the Azure cloud JKS file associated with the user account
+ Parameters
    + id (required String `azure-credential-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
        }
        



# Group Infrastructure 
Infrastructure  related resources of the **Cloudbreak API**.
Creates an AWS CloudFormation stack or an Azure stack. Allows configurations of VPC, subnet, internet gateway, route table, securityGroups, ACLs, instances. 
It launches the desired number of instances based on a selected AMI.


## Creates and infrastructure on AWS [/infra]
### Create infrastructure [POST]
Creates an AWS CloudFormation stack (vpc, subnet, internetGateway, routeTable, securityGroups, ACLs, instances)

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
        
    + Body

            {
                "cloudPlatform": "AWS",
                "stackName": "my-stack-1",
                "nodeCount": 3,
                "description": "3 node AWS stack for Ambari provisioning",
                "credentialId":"credential-123",
                "parameters": {
                    "region":"EU-WEST-1",
                    "keyName":"sequence-eu",
                    "addressPrefix": "172.16.0.0/16",
                    "subnetAddressPrefix": "172.16.0.0/24",
                    "instanceType": "M3.XLARGE",
                    ... additional params if we want to further customize vpc, subnets, etc..
                }
            }

    + Response 200 (application/json)
    
            {
                
            }


## Creates and infrastructure on Azure [/infra]
### Create infrastructure [POST]
Creates an Azure infrastructure stack (vpc, subnet, instances)

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
        
    + Body

            {
                "cloudPlatform": "AZURE",
                "stackName": "my-stack-2",
                "nodeCount": 4,
                "description": "4 node Azure stack for Ambari provisioning",
                "credentialId":"credential-234",
                "parameters": {
                    "location": "EAST_ASIA",
                    "addressPrefix": "172.16.0.0/16",
                    "subnetAddressPrefix": "172.16.0.0/24",
                    "sshPublicKey": "base64-encoded-public-key-for-pw-less-ssh",
                    "disableSshPasswordAuthentication": true,
                    "vmType": "SMALL",
                    ... additional params if we want to further customize vpc, subnets, etc..
                }
            }

    + Response 200 (application/json)
    
            {
                
            }

## Retrieves al the created infrastructures of a user [/infra]
### List infrastructures [GET]
Describes the cloud infrastructures belonging to the user

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
    + Body

            {
            
            }

    + Response 200 (application/json)
    
            {
            
                "id":"stack-123",
                "status":"CREATE_IN_PROGRESS",
                "creationTime":"2010-07-27T22:28:28Z",
                "ambariServerIP":"ambari.server.ip",
                "cloudPlatform": "AWS",
                "stackName": "my-stack-1",
                "nodeCount": 3,
                "description": "3 node AWS stack for Ambari provisioning",
                "credentialId":"credential-123",
                "parameters": {
                  "region":"EU-WEST-1",
                  "keyName":"sequence-eu",
                  "addressPrefix": "172.16.0.0/16",
                  "subnetAddressPrefix": "172.16.0.0/24",
                  "instanceType": "M3.XLARGE",
                  ... additional params if we want to further customize vpc, subnets, etc..
                }
              },{
                "id":"stack-234",
                "status":"CREATE_COMPLETE",
                "creationTime":"2010-07-27T22:28:28Z",
                "ambariServerIP":"ambari.server.ip",
                "cloudPlatform": "AZURE",
                "stackName": "my-stack-2",
                "nodeCount": 4,
                "description": "4 node Azure stack for Ambari provisioning",
                "credentialId":"credential-234",
                "parameters": {
                  "location": "EAST_ASIA",
                  "addressPrefix": "172.16.0.0/16",
                  "subnetAddressPrefix": "172.16.0.0/24",
                  "sshPublicKey": "base64-encoded-public-key-for-pw-less-ssh",
                  "disableSshPasswordAuthentication": true,
                  "vmType": "SMALL",
                  ... additional params if we want to further customize vpc, subnets, etc..
                }
                  
            }
            

        
##Describe the infrastructure [/infra/{id}]
### Retrieve one particulat AWS or Azure infrastructure by id [GET]
Retrieves the AWS or Azure infrastructure by submitting the infrastcuture ID
+ Parameters
    + id (required String `aws-infrastructure-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
            "id":"stack-123",
            "status":"CREATE_IN_PROGRESS",
            "creationTime":"2010-07-27T22:28:28Z",
            "ambariServerIP":"ambari.server.ip",
            "cloudPlatform": "AWS",
            "stackName": "my-stack-1",
            "nodeCount": 3,
            "description": "3 node AWS stack for Ambari provisioning",
            "credentialId":"credential-123",
            "parameters": {
              "region":"EU-WEST-1",
              "keyName":"sequence-eu",
              "addressPrefix": "172.16.0.0/16",
              "subnetAddressPrefix": "172.16.0.0/24",
              "instanceType": "M3.XLARGE",
              ... additional params if we want to further customize vpc, subnets, etc..
            }
                  
        }


##Deletes the specified infrastructure from the cloud [/infra/{id}]
### Deletes the infrastructure[DELETE]
WARNING: Deletes the specified infrastructure from the cloud and all associated resources (VPC, subnet, internetGateway, routeTable, securityGroups, ACLs, instances)

+ Parameters
    + id (required String `aws-infrastructure-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
        }
        
        
# Group Hadoop cluster  
Hadoop cluster  related resources of the **Cloudbreak API**.

Creates a Hadoop cluster stack on the specified infrastructure. Allows configurations of different cluster setups (blueprints) of arbitrary sizes.


## Creates a Hadoop stack [/stack]
### Create infrastructure [POST]
Creates a Hadoop stack based on the blueprint. The blueprint specifies the Hadoop services, the number of hosts in the hostgroup and other Hadoop specific configurations. 
+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
        
    + Body

            {
                "clusterName": "my-ambari-cluster-1",
                "blueprintBody": {
                "host_groups" : [
                      {
                        "name" : "master",
                        "components" : [
                            {
                              "name" : "NAMENODE"
                            },
                            {
                              "name" : "SECONDARY_NAMENODE"
                            },
                            {
                              "name" : "RESOURCEMANAGER"
                            },
                            {
                              "name" : "HISTORYSERVER"
                            },
                            {
                              "name" : "NAGIOS_SERVER"
                            },
                            {
                              "name" : "ZOOKEEPER_SERVER"
                            }
                        ],
                        "cardinality" : "1"
                      },
                      {
                        "name" : "slaves",
                        "components" : [
                            {
                              "name" : "DATANODE"
                            },
                            {
                              "name" : "HDFS_CLIENT"
                            },
                            {
                              "name" : "NODEMANAGER"
                            },
                            {
                              "name" : "YARN_CLIENT"
                            },
                            {
                              "name" : "MAPREDUCE2_CLIENT"
                            },
                            {
                              "name" : "ZOOKEEPER_CLIENT"
                            }
                            ],
                        "cardinality" : "2"
                      }
                    ],
                    "Blueprints" : {
                      "blueprint_name" : "multi-node-hdfs-yarn",
                      "stack_name" : "HDP",
                      "stack_version" : "2.0"
                    }
                  }
            }

    + Response 200 (application/json)
    
            {
                
            }

## Creates a Hadoop stack [/stack]
### Create infrastructure [POST]
Creates a Hadoop stack based on the blueprint. The blueprint specifies the Hadoop services, the number of hosts in the hostgroup and other Hadoop specific configurations. 
The blueprint is available behind a URL.
+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
        
    + Body

            {
                "clusterName": "my-ambari-cluster-1",
                "blueprintUrl": "https://raw.githubusercontent.com/sequenceiq/ambari-rest-client/master/src/main/resources/blueprints/multi-node-hdfs-yarn"

            }

    + Response 200 (application/json)
    
            {
                
            }



## Retrieves al the created Hadoop clusters of a user [/stack]
### List stacks [GET]
Retrieve all Hadoop cluster configurations

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324
            
    + Body

            {
            
            }

    + Response 200 (application/json)
    
            {
                TBD
            }
            

        
##Describe one Hadoop cluster  [/stack/{id}]
### Retrieve one particulat Hadoop cluster configuration [GET]
Retrieves thRetrieve one particulat Hadoop cluster configuration by submitting the stack ID
+ Parameters
    + id (required String `aws-infrastructure-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
            "id":"stack-123",
            "status":"CREATE_IN_PROGRESS",
            "creationTime":"2010-07-27T22:28:28Z",
            "ambariServerIP":"ambari.server.ip",
            "cloudPlatform": "AWS",
            "stackName": "my-stack-1",
            "nodeCount": 3,
            "description": "3 node AWS stack for Ambari provisioning",
            "credentialId":"credential-123",
            "parameters": {
              "region":"EU-WEST-1",
              "keyName":"sequence-eu",
              "addressPrefix": "172.16.0.0/16",
              "subnetAddressPrefix": "172.16.0.0/24",
              "instanceType": "M3.XLARGE",
              ... additional params if we want to further customize vpc, subnets, etc..
            }
                  
        }


##Deletes the specified infrastructure from the cloud [/infra/{id}]
### Deletes the infrastructure[DELETE]
WARNING: Deletes the specified infrastructure from the cloud and all associated resources (VPC, subnet, internetGateway, routeTable, securityGroups, ACLs, instances)

+ Parameters
    + id (required String `aws-infrastructure-id`) ... The identifier of the Azure `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            
        }