FORMAT: 1A
HOST: http://apidocs.sequenceiq.com/cloudbreak

# cloudbreak
*Cloudbreak is a powerful left surf that breaks over a coral reef, a mile off southwest the island of Tavarua, Fiji.*

*Cloudbreak is a cloud agnostic Hadoop as a Service API. Abstracts the provisioning and ease management and monitoring of on-demand clusters.*

SequenceIQ's Cloudbreak is a RESTful application development platform with the goal of helping developers to build solutions for deploying Hadoop YARN clusters in different environments. Once it is deployed in your favorite servlet container it exposes a REST API allowing to span up Hadoop clusters of arbitary sizes and cloud providers. Provisioning Hadoop has never been easier.
Cloudbreak is built on the foundation of cloud providers API (Amazon AWS, Microsoft Azure), Apache Ambari, Docker lightweight containers, Serf and dnsmasq.


##Benefits

###Secure
Supports a token based and OAuth2 authentication model. The cluster is provisioned in a logically isolated network (Virtual Private Cloud) of your cloud favorite cloud provider. If the cluster is launched in a VPC network, the framework configure firewall settings that control the network access of your launched instances. For example a Hadoop Resource Manager can be accessed from the internet, whereas none of the other nodes are available. Cloudbreak does not store or manages your cloud credentials - it is the end user's responsibility to link Cloudbreak with her/his cloud account. We provide utilities to ease this process (IAM on Amazon, certificates on Azure).

###Elastic
Cloudbreak API can provision an arbitrary number of Hadoop nodes - the API does the hard work and span up the cluster, configure the networks and the selected Hadoop services without any interaction. POST once and use it anytime after.

###Scalable
As the workload changes, the API allows you to add or remove nodes on the fly. Cloudbreak does the hard work of reconfiguring the infrastructure, provision or decommission Hadoop nodes and let the cluster be continuously operational. Once provisioned, new nodes will take up the load and increase the cluster throughput.

###Blueprints
Supports different Hadoop cluster blueprints. Hostgroups defined in blueprints can be associated to different VPC subnets and availability zones, thus you can span up a cluster for deploying highly available applications.


###Flexible
Allows the option to choose the favorite cloud provider and different pricing models. The API translated the calls towards different cloud vendors - uses one common API, no need to rewrite the code when changing between cloud providers.


# Group User authentication
Authentication related resources of the **Cloudbreak API**.

The API supports token based and OAuth2 authentication.
All operations against a REST resource must be authenticated.

## Authentication [/authenticate]
### Authenticates a user [POST]
After successful authentication the call will return with an authentication token, and the user role. The token invalidates with the HTTP session or with the expiration of OAuth2 token.

+ Request (application/json)

        {
            "username": "mick.fanning@surf.com",
            "password": "magicseaweed"
        }

+ Response 200 (application/json)

        {
            "token": "user:c45sdfdsfo234jgkhsdgf324",
            "roles": {
                "ROLE_COMPANY_ADMIN": true,
                "ROLE_COMPANY_USER ": true
            },
            "name": "mick.fanning@surf.com"
        }

# Group User management
User management related resources of the **Cloudbreak API**.

These calls require *COMPANY_ADMIN* roles. A company administrator is the user who registers the company.
Currently there are two user roles supported: regular users as  *COMPANY_USER* and admin users as *COMPANY_ADMIN*.

## User management [/users]
### Creates a new user [POST]
Creates a new user with the specified username/password and role.

+ Request (application/json)

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "username": "kelly.slater@surf.com",
                "password": "magicseaweed",
                "userRole": {COMPANY_ADMIN, COMPANY_USER}
            }

+ Response 200 (application/json)

        {
            "id": "user-2"
        }

### List all users [GET]
Users in *COMPANY_ADMIN* role can retrieve all users belonging to the company.
The information contains generic user info, cloud and Hadoop cluster configurations belonging to the particular user.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324


+ Response 200 (application/json)

        [
            {
               TBD
            }
        ]

## User information [/me]
Retrieve informations about the authenticated

### Retrieve user configuration [GET]
The information contains generic user info, cloud and Hadoop cluster configurations belonging to the particular user.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            {
               TBD
            }
        }


# Group Cloud authentication
Cloud Authentication related resources of the **Cloudbreak API**.
Adds an AWS IAM role ARN or Azure JKS to user's account.


## Associate a cloud credential to user [/credentials]
### Associate credential [POST]
Registers an AWS IAM role ARN or the user's account.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
               "name": "sqiq-0002",
               "cloudPlatform": "AWS",
               "parameters": {
                   "roleArn": "arn:aws:iam::755047402263:role/seq-self-cf",
                   "instanceProfileRoleArn": "arn:aws:iam::755047402263:instance-profile/readonly-role"
                }
            }

+ Response 201 (application/json)

        {
           "id":51
        }


## Associate a cloud credential to user [/credentials]
### Associate credential [POST]
Adds an Azure JKS the user's account.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "cloudPlatform": "AZURE",
                "parameters": {
                    "subscriptionId": "1234-5678-1234-5678",
                    "jksPassword": "pw123"
                }
            }

+ Response 201 (application/json)

        {
        }


##Retrieves the cloud credentials of the user [/credentials]
### Retrieve credentials [GET]
Retrieves registered cloud credentials  for a user

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        [
            {
                "id": 50,
                "description": "",
                "parameters": {
                    "roleArn": "arn:aws:iam::755047402263:role/seq-self-cf",
                    "instanceProfileRoleArn": "arn:aws:iam::755047402263:instance-profile/readonly-role"
                },
                "cloudPlatform": "AWS",
                "name": "aws_credential"
            },
            {
                "id": 51,
                "description": "",
                "parameters": {
                    "roleArn": "arn:aws:iam::755047402263:role/seq-self-cf",
                    "instanceProfileRoleArn": "arn:aws:iam::755047402263:instance-profile/readonly-role"
                },
                "cloudPlatform": "AWS",
                "name": "lp-0002"
            }
        ]

## Retrieves a specific cloud credential configuration for the user [/credentials/{id}]
### Retrieve credential [GET]

Retrieves the cloud credential (AWS or Azure) associated with the user account
+ Parameters
    + id (required String `id`) ... The identifier of the user cloud `credential` entry

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            "id": 50,
            "description": "",
            "parameters": {
                "roleArn": "arn:aws:iam::755047402263:role/seq-self-cf",
                "instanceProfileRoleArn": "arn:aws:iam::755047402263:instance-profile/readonly-role"
            },
            "cloudPlatform": "AWS",
            "name": "aws_credential"
        }


## Delete the specified cloud credentials from the user account [/credentials/{id}]
### Deletes the specified cloud credentials [DELETE]

+ Parameters
    + id (required String `id`) ... The identifier of cloud `credential`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
        }


# Group Template configuration
Template  related resources of the **Cloudbreak API**.
AWS or Azure cloud templates allow configuration of VPC, subnet, internet gateway, route table, securityGroups, ACLs, instances.
Templates describe cloud infrastructures and are used for creating cloud stacks - such as running cloud infrastructures.

## Create cloud template [/templates]
### Create AWS template [POST]
Creates an AWS template (vpc, subnet, internetGateway, routeTable, securityGroups, ACLs, instances). The template internally is using an Amazon AWS Cloudformation template.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "cloudPlatform": "AWS",
                “name": “my-template-1",
                "parameters": {
                    "sshLocation”: “0.0.0.0/0"
                    "region": "eu-west-1",
                    "keyName": "sequence-eu",
                    "instanceType": “m3.xlarge",
                    “amiId”: “ami-12345678"
                }
            }

+ Response 200 (application/json)

        {
            "infraId": "aws-infra-id"
        }


### Create Azure template [POST]
Creates an Azure cloud template. (vpc, subnet, instances)

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "cloudPlatform": "AZURE",
                “name": "my-azure-cluster",
                "parameters": {
                    "location": "NORTH_EUROPE",
                    "description": "my-azure-cluster description",
                    "addressPrefix": "172.16.0.0/16",
                    "subnetAddressPrefix": "172.16.0.0/24",
                    "deploymentSlot": "production",
                    "imageName": "c290a6b031d841e09f2da759bbabe71f__Oracle-Linux-6",
                    "username": "ricsiuser",
                    "password": "Password!@#$",
                    "disableSshPasswordAuthentication": "true",
                    "vmType": "Small"
                }
            }

+ Response 200 (application/json)

        {
            "infraId": "azure-infra-id"
        }

## Retrieve templates for a user [/templates]
### List templates [GET]
Retrieves a list with the cloud templates belonging to the user

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
            }

+ Response 200 (application/json)

          [
              {
                  "cloudPlatform": "AWS",
                  “name": “my-template-1",
                  "parameters": {
                      "sshLocation”: “0.0.0.0/0"
                      "region": "eu-west-1",
                      "keyName": "sequence-eu",
                      "instanceType": “m3.xlarge"
                      “amiId”: “ami-12345678"
                    }
              },
              {
                  "cloudPlatform": "AZURE",
                  “name": "my-azure-cluster",
                  "parameters": {
                      "location": "NORTH_EUROPE",
                      "description": "my-azure-cluster description",
                      "addressPrefix": "172.16.0.0/16",
                      "subnetAddressPrefix": "172.16.0.0/24",
                      "deploymentSlot": "production",
                      "imageName": "c290a6b031d841e09f2da759bbabe71f__Oracle-Linux-6",
                      "username": "ricsiuser",
                      "password": "Password!@#$",
                      "disableSshPasswordAuthentication": "true",
                      "vmType": "Small"
              }
          ]


## Retrieve the given template for the user [/templates/{id}]
### Retrieve a particular AWS or Azure template by id [GET]
Retrieves the AWS or Azure template by submitting the template ID


+ Parameters
    + id (required String `id`) ... The identifier of the `template`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            "id":"stack-123",
            {
                "cloudPlatform": "AWS",
                “name": “my-template-1",
                "parameters": {
                    "sshLocation”: “0.0.0.0/0"
                    "region": "eu-west-1",
                    "keyName": "sequence-eu",
                    "instanceType": “m3.xlarge"
                    “amiId”: “ami-12345678"
                }
            }
        }


## Delete the specified template from the database [/templates/{id}]
### Delete the specified template [DELETE]
Deletes the specified template from the database, unless there is a cloud instance created from this template.

+ Parameters
    + id (required String `id`) ... The identifier of the `template`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
        }

# Group Cloud stacks
Stacks related resources of the **Cloudbreak API**.
Manages AWS or Azure clouds based on templates. Creates, launches, stops, deletes the specified number of instances in the selected template (infrastructure).


## Create the (AWS or Azure) cloud [/stacks]
### Create stack [POST]
Creates an AWS or Azure cloud from a template.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "name": "my-cloud-1",
                "clusterSize": 3,
                "templateId": "1"
            }

+ Response 200 (application/json)

        {
            "infraId": "aws-infra-id"
        }

## Retrieve stacks for the user [/stacks]
### List stacks [GET]
Retrieves the cloud stacks belonging to the user

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
            }

+ Response 200 (application/json)

        {
            "nodeCount": 2,
            "templateId": "1",
            "cloudPlatform": "AWS",
            "name": "stack-123",
            "status": "CREATED",
            "creationTime": "2010-07-27T22:28:28Z",
            "ambarServerIP": "ambari.server.ip",
            "stackDescription": {
                  "resources": {
                      "stackResources": [
                      {
                          "description": null,
                          "stackName": "coreos",
                          "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                          "logicalResourceId": "CoreOSELB",
                          "physicalResourceId": "coreos-CoreOSELB-EIJBBQ9335MT",
                          "resourceType": "AWS::ElasticLoadBalancing::LoadBalancer",
                          "timestamp": 1400733975000,
                          "resourceStatus": "CREATE_COMPLETE",
                          "resourceStatusReason": null
                      },
                      {
                          "description": null,
                          "stackName": "coreos",
                          "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                          "logicalResourceId": "CoreOSUser",
                          "physicalResourceId": "coreos-CoreOSUser-1W69DK6OLLTXZ",
                          "resourceType": "AWS::IAM::User",
                          "timestamp": 1400733980000,
                          "resourceStatus": "CREATE_COMPLETE",
                          "resourceStatusReason": null
                        }
                      ]},
                          "stack": {
                              "nextToken": null,
                              "stacks": [
                                  {
                                      "tags": [
                                      {
                                          "value": "coreos",
                                          "key": "Name"
                                      }],
                                      "capabilities": [
                                          "CAPABILITY_IAM"
                                          ],
                                      "timeoutInMinutes": null,
                                      "notificationARNs": [],
                                      "disableRollback": false,
                                      "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                                      "stackName": "coreos",
                                      "description": "CoreOS stack",
                                      "parameters": [
                                          {
                                              "parameterValue": "sequence-eu",
                                              "parameterKey": "KeyPair"
                                          },
                                          {
                                              "parameterValue": "0.0.0.0/0",
                                              "parameterKey": "AllowSSHFrom"
                                          }]
                                  }
                              ]
                          }
                    }
            }


## Retrieve a  stack [/stacks/{id}]
### Retrieve a particular stack [GET]
Retrieves a  (AWS or Azure)  stack definition.

+ Parameters
    + id (required String `id`) ... The identifier of the `template`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            "nodeCount": 2,
            "templateId": "1",
            "cloudPlatform": "AWS",
            "name": "stack-123",
            "status": "CREATED",
            "creationTime": "2010-07-27T22:28:28Z",
            "ambarServerIP": "ambari.server.ip",
            "stackDescription": {
                "resources": {
                    "stackResources": [
                    {
                        "description": null,
                        "stackName": "coreos",
                        "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                        "logicalResourceId": "CoreOSELB",
                        "physicalResourceId": "coreos-CoreOSELB-EIJBBQ9335MT",
                        "resourceType": "AWS::ElasticLoadBalancing::LoadBalancer",
                        "timestamp": 1400733975000,
                        "resourceStatus": "CREATE_COMPLETE",
                        "resourceStatusReason": null
                    },
                    {
                        "description": null,
                        "stackName": "coreos",
                        "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                        "logicalResourceId": "CoreOSUser",
                        "physicalResourceId": "coreos-CoreOSUser-1W69DK6OLLTXZ",
                        "resourceType": "AWS::IAM::User",
                        "timestamp": 1400733980000,
                        "resourceStatus": "CREATE_COMPLETE",
                        "resourceStatusReason": null
                    }]
                    },
                    "stack": {
                        "nextToken": null,
                        "stacks": [
                        {
                            "tags": [
                            {
                                "value": "coreos",
                                "key": "Name"
                            }],
                            "capabilities": [
                                "CAPABILITY_IAM"
                            ],
                            "timeoutInMinutes": null,
                            "notificationARNs": [],
                            "disableRollback": false,
                            "stackId": "arn:aws:cloudformation:eu-west-1:755047402263:stack/coreos/fa71a930-e16b-11e3-8185-50014118ec7c",
                            "stackName": "coreos",
                            "description": "CoreOS stack",
                            "parameters": [
                            {
                                "parameterValue": "sequence-eu",
                                "parameterKey": "KeyPair"
                            },
                            {
                                "parameterValue": "0.0.0.0/0",
                                "parameterKey": "AllowSSHFrom"
                            }]
                        }]
                      }
                    }
        }



## Delete cloud stacks [/stacks/{id}]
### Deletes the specified cloud stack [DELETE]
Deletes the specified stack from the (AWS or Azure) cloud

WARNING: All data will be lost - unless there was no storage configured. It is the user's responsibilty to backup data or take snapshots uning the cloud interface.

+ Parameters
    + id (required String `aws-cloud-id`) ... The identifier of the `stack`.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
        }

# Group Hadoop blueprint configuration
Hadoop blueprint  related resources of the **Cloudbreak API**.
Handling Hadoop cluster blueprints. Allows configurations of different blueprints to be used later to create Hadoop cluster instances.


## Manage Hadoop blueprints [/blueprints]
### Create blueprint [POST]

Creates a Hadoop blueprint. The blueprint specifies the Hadoop services, and other Hadoop specific configurations.
The cardinality specifies the desired number of nodes for the hostgroup. When the cluster is created this number can be overrided.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                "name": "multi-node-hdfs-yarn",
                "blueprint": {
                  "Blueprints": {
                    "blueprint_name": "multi-node-hdfs-yarn",
                    "stack_name": "HDP",
                    "stack_version": "2.0"
                  },
                  "hostGroups": [
                    {
                      "name": "master",
                      "components": [
                        {
                          "name": "NAMENODE"
                        },
                        {
                          "name": "SECONDARY_NAMENODE"
                        },
                        {
                          "name": "RESOURCEMANAGER"
                        },
                        {
                          "name": "HISTORYSERVER"
                        },
                        {
                          "name": "NAGIOS_SERVER"
                        },
                        {
                          "name": "ZOOKEEPER_SERVER"
                        }
                      ],
                      "cardinality": "1"
                    },
                    {
                      "name": "slaves",
                      "components": [
                        {
                          "name": "DATANODE"
                        },
                        {
                          "name": "HDFS_CLIENT"
                        },
                        {
                          "name": "NODEMANAGER"
                        },
                        {
                          "name": "YARN_CLIENT"
                        },
                        {
                          "name": "MAPREDUCE2_CLIENT"
                        },
                        {
                          "name": "ZOOKEEPER_CLIENT"
                        }
                      ],
                      "cardinality": "2"
                    }
                    ]
                  }
              }


+ Response 200 (application/json)

        {
        }


## Create Hadoop blueprints [/blueprints]
### Create a blueprint [POST]
Creates a Hadoop blueprint using the provided `blueprintUrl`

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                “name": “multi-node-hdfs-yarn",
                “blueprintUrl”: “http://url.com/blueprint.json”
            }

+ Response 200 (application/json)

        {
        }


## Retrieve Hadoop blueprints [/blueprints]
### List blueprints for a user [GET]
Retrieve all Hadoop cluster blueprints

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
            }

+ Response 200 (application/json)

        {
            "stackName": "my-ambari-cluster-1",
            "blueprintBody": {
            "host_groups" : [
                  {
                    "name" : "master",
                    "components" : [
                        {
                          "name" : "NAMENODE"
                        },
                        {
                          "name" : "SECONDARY_NAMENODE"
                        },
                        {
                          "name" : "RESOURCEMANAGER"
                        },
                        {
                          "name" : "HISTORYSERVER"
                        },
                        {
                          "name" : "NAGIOS_SERVER"
                        },
                        {
                          "name" : "ZOOKEEPER_SERVER"
                        }
                    ],
                    "cardinality" : "1"
                  },
                  {
                    "name" : "slaves",
                    "components" : [
                        {
                          "name" : "DATANODE"
                        },
                        {
                          "name" : "HDFS_CLIENT"
                        },
                        {
                          "name" : "NODEMANAGER"
                        },
                        {
                          "name" : "YARN_CLIENT"
                        },
                        {
                          "name" : "MAPREDUCE2_CLIENT"
                        },
                        {
                          "name" : "ZOOKEEPER_CLIENT"
                        }
                        ],
                        "cardinality" : "2"
                  }
                ],
                "Blueprints" : {
                  "blueprint_name" : "multi-node-hdfs-yarn",
                  "stack_name" : "HDP",
                  "stack_version" : "2.0"
                }
              }
        }


## Retrieve a Hadoop blueprint  [/blueprints/{id}]
### Retrieve a particular Hadoop cluster blueprint [GET]

+ Parameters
    + id (required String `id`) ... The identifier of the `blueprint`

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
                "stackName": "my-ambari-cluster-1",
                "blueprintBody": {
                "host_groups" : [
                      {
                        "name" : "master",
                        "components" : [
                            {
                              "name" : "NAMENODE"
                            },
                            {
                              "name" : "SECONDARY_NAMENODE"
                            },
                            {
                              "name" : "RESOURCEMANAGER"
                            },
                            {
                              "name" : "HISTORYSERVER"
                            },
                            {
                              "name" : "NAGIOS_SERVER"
                            },
                            {
                              "name" : "ZOOKEEPER_SERVER"
                            }
                        ],
                        "cardinality" : "1"
                      },
                      {
                        "name" : "slaves",
                        "components" : [
                            {
                              "name" : "DATANODE"
                            },
                            {
                              "name" : "HDFS_CLIENT"
                            },
                            {
                              "name" : "NODEMANAGER"
                            },
                            {
                              "name" : "YARN_CLIENT"
                            },
                            {
                              "name" : "MAPREDUCE2_CLIENT"
                            },
                            {
                              "name" : "ZOOKEEPER_CLIENT"
                            }
                            ],
                            "cardinality" : "2"
                      }
                    ],
                    "Blueprints" : {
                      "blueprint_name" : "multi-node-hdfs-yarn",
                      "stack_name" : "HDP",
                      "stack_version" : "2.0"
                    }
                  }
        }


## Delete blueprint [/blueprints/{id}]
### Deletes the specified blueprint [DELETE]
WARNING: Deletes the specified blueprint from the database.

+ Parameters
    + id (required String `id`) ... The identifier of the `blueprint`

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
        }


# Group Hadoop clusters
Hadoop cluster related resources of the **Cloudbreak API**.


## Managing Hadoop clusters [/clusters]
### Create cluster [POST]
Creates a Hadoop cluster based on the blueprint. The blueprint specifies the Hadoop services, the number of hosts in the hostgroup and other Hadoop specific configurations.
Number of hosts in hostgroups can be overridden at cluster creation time.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
                 "clusterName": "my-cluster",
                 "blueprintName": "multi-node-hdfs-yarn",
                 "hostGroups": [
                     {
                          "name": "master",
                          "cardinality": 1
                     },
                     {
                         "name": "slave",
                         "cardinality": 3
                    } ]
            }

+ Response 200 (application/json)

        {
        }


## Retrieve Hadoop clusters [/clusters]
### List clusters [GET]
Retrieve all Hadoop clusters

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

    + Body

            {
            }

+ Response 200 (application/json)

        {
          "cluster": {
            "configurations": [
              {
                "Config": {
                  "cluster_name": "MySingleNodeCluster2"
                },
                "type": "capacity-scheduler",
                "tag": "1",
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/configurations?type=capacity-scheduler&tag=1"
              },
              {
                "Config": {
                  "cluster_name": "MySingleNodeCluster2"
                },
                "type": "core-site",
                "tag": "1",
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/configurations?type=core-site&tag=1"
              }
            ],
            "hosts": [
              {
                "Hosts": {
                  "host_name": "server.ambari.com",
                  "cluster_name": "MySingleNodeCluster2"
                },
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/hosts/server.ambari.com"
              }
            ],
            "workflows": [],
            "config_groups": [],
            "services": [
              {
                "ServiceInfo": {
                  "service_name": "GANGLIA",
                  "cluster_name": "MySingleNodeCluster2"
                },
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/services/GANGLIA"
              },
              {
                "ServiceInfo": {
                  "service_name": "HDFS",
                  "cluster_name": "MySingleNodeCluster2"
                },
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/services/HDFS"
              }
            ],
            "requests": [
              {
                "Requests": {
                  "id": 1,
                  "cluster_name": "MySingleNodeCluster2"
                },
                "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2/requests/1"
              }
            ],
            "Clusters": {
              "desired_configs": {
                "zookeeper-log4j": {
                  "tag": "1",
                  "user": "admin"
                },
                "yarn-site": {
                  "tag": "1",
                  "user": "admin"
                }
              },
              "version": "HDP-2.1",
              "cluster_name": "MySingleNodeCluster2",
              "cluster_id": 3
            },
            "href": "http://172.17.0.2:8080/api/v1/clusters/MySingleNodeCluster2"
          }
        }


## Retrieve a cluster  [/clusters/{id}]
### Retrieve one particulat Hadoop cluster configuration [GET]
Retrieves a particular cluster configuration

+ Parameters
    + id (required String `id`) ... The identifier of the `cluster`

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
            "clusterName": "my-hadoop-cluster-1",
            "stackId":"my-hadoop-stack-1"
            "host_groups" : [
                  {
                    "name" : "master",
                    "cardinality" : "1"
                  },
                  {
                    "name" : "slaves",
                    "cardinality" : "2"
                  }
                ]
        }


## Delete clusters [/clusters/{id}]
### Deletes the specified cluster [DELETE]
WARNING: Deletes the cluster - all data in HDFS will be lost. The cluster is destroyed.

+ Parameters
    + id (required String `id`) ... The identifier of the cluster.

+ Request

    + Headers

            x-auth-token: user:c45sdfdsfo234jgkhsdgf324

+ Response 200 (application/json)

        {
        }
